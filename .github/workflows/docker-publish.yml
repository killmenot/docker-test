---
name: Publish Docker images
on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REPO_URL: ghcr.io
  REPO_PROJECT: killmenot

jobs:
  input:
    runs-on: ubuntu-22.04
    outputs:
      paths: ${{ steps.wrap.outputs.paths }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Glob match
        uses: tj-actions/glob@v22
        id: glob
        with:
          separator: ','
          files: |
            **/Dockerfile

      - name: Wrap
        id: wrap
        run: |
          tmp1="${{ steps.glob.outputs.paths }}"
          tmp2=`echo "[\"$tmp1\"]" |sed 's/,/\",\"/g'`
          echo "paths=${tmp2}" >> "$GITHUB_OUTPUT"

  push-to-registry:
    runs-on: ubuntu-latest
    needs: [input]
    strategy:
      matrix:
        path: ${{ fromJSON(needs.input.outputs.paths) }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - uses: winterjung/split@v2
        id: split
        with:
          separator: '/'
          msg: "${{ matrix.path }}"

      - name: Inputs
        id: inputs
        run: |
          OUTPUT_0=${{ steps.split.outputs._0 }}
          OUTPUT_1=${{ steps.split.outputs._1 }}
          OUTPUT_2=${{ steps.split.outputs._2 }}
          OUTPUT_3=${{ steps.split.outputs._3 }}

          [[ -z $OUTPUT_3 ]] && IMAGE=${{ steps.split.outputs._0 }} || IMAGE=${{ steps.split.outputs._0 }}/${{ steps.split.outputs._1 }}
          [[ -z $OUTPUT_3 ]] && TAG=${{ steps.split.outputs._1 }} || TAG=${{ steps.split.outputs._2 }}
          [[ -z $OUTPUT_3 ]] && LOCATION=${{ steps.split.outputs._0 }}/${{ steps.split.outputs._1 }} || LOCATION=${{ steps.split.outputs._0 }}/${{ steps.split.outputs._1 }}/${{ steps.split.outputs._2 }}
          [[ -z $OUTPUT_3 ]] && LATEST=${{ steps.split.outputs._0 }}/${{ steps.split.outputs._1 }}/LATEST || LATEST=${{ steps.split.outputs._0 }}/${{ steps.split.outputs._1 }}/${{ steps.split.outputs._2 }}/LATEST
          
          echo "image=$IMAGE" >> "$GITHUB_OUTPUT"
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "location=$LOCATION" >> "$GITHUB_OUTPUT"
          echo "latest=$LATEST" >> "$GITHUB_OUTPUT"

      - name: Print inputs
        run: |
          echo "${{ steps.inputs.outputs.image }}"
          echo "${{ steps.inputs.outputs.tag }}"
          echo "${{ steps.inputs.outputs.location }}"
          echo "${{ steps.inputs.outputs.latest }}"
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and tag
        run: |
          # set -x
          IMAGE=${{ steps.inputs.outputs.image }}
          TAG=${{ steps.inputs.outputs.tag }}
          LATEST=${{ steps.inputs.outputs.latest }}

          docker build -t $REPO_URL/$REPO_PROJECT/$IMAGE:$TAG ./${{ steps.inputs.outputs.path }}
          
          if [ -f "$LATEST" ]
          then
            docker tag $REPO_URL/$REPO_PROJECT/$IMAGE:$TAG $REPO_URL/$REPO_PROJECT/$IMAGE:latest 
          fi

      - name: Test
        run: docker image ls
      
      - name: Push images
        run: |
          # set -x
          IMAGE=${{ steps.inputs.outputs.image }}
          TAG=${{ steps.inputs.outputs.tag }}
          LATEST=${{ steps.inputs.outputs.latest }}

          docker push $REPO_URL/$REPO_PROJECT/$IMAGE:$TAG

          if [ -f "$LATEST" ]
          then
            docker push $REPO_URL/$REPO_PROJECT/$IMAGE:latest
          fi
