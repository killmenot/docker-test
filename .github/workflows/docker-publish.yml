---
name: Publish Docker images
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  get-os:
    runs-on: ubuntu-22.04
    # env:
    #   REPO_URL: ghcr.io
    #   REPO_PROJECT: killmenot
    # strategy:
    #   matrix:
    #     image: [node]
    outputs:
      os: ${{ steps.wrap.outputs.paths }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Glob match
        uses: tj-actions/glob@v22
        id: glob
        with:
          separator: ','
          files: |
            **/Dockerfile

      - name: Show all matching files
        id: wrap
        run: |
          paths="${{ steps.glob.outputs.paths }}"
          echo $paths
          paths=`echo "[\"$tmp\"]" |sed 's/,/\",\"/g'`
          echo $paths
          echo "paths=${paths}" >> "$GITHUB_OUTPUT"
          

      # # - uses: winterjung/split@v2
      # #   id: split
      # #   with:
      # #     msg: ${{ steps.glob.outputs.paths }}
          
      # - id: os
      #   run:
      #     echo "os_array=["${{ steps.glob.outputs.paths }}"]" >> "$GITHUB_OUTPUT"
      - name: Test
        run: |
          echo "${{ steps.wrap.outputs.paths }}"

      - name: Test2
        run: |
          echo "${{ toJSON(steps.wrap.outputs.paths) }}"

      - name: Test3
        run: |
          echo ${{ toJSON(steps.wrap.outputs.paths) }}

  # build:
  #   runs-on: ubuntu-latest
  #   needs: [get-os]
  #   strategy:
  #     matrix:
  #       os: ${{ needs.get-os.outputs.os }}
  #   steps:
  #     - name: Test
  #       run: ${{ matrix.os }}

    # ${{ fromJson(format('[{0}]', inputs.os)) }}
      
      # login to registry
      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build
      #   env:
      #     IMAGE: ${{ matrix.image }}
      #   run: |
      #     # set -x
      #     docker build -t $REPO_URL/$REPO_PROJECT/$IMAGE $IMAGE/.
      
      # - name: Tag
      #   env:
      #     IMAGE: ${{ matrix.image }}
      #   run: |
      #     # set -x
      #     VERSION=$(cat $IMAGE/VERSION)
      #     echo $VERSION
      #     docker tag $REPO_URL/$REPO_PROJECT/$IMAGE:latest $REPO_URL/$REPO_PROJECT/$IMAGE:$VERSION
      
      # - name: Push images
      #   env:
      #     IMAGE: ${{ matrix.image }}
      #   run: |
      #     # set -x
      #     VERSION=$(cat $IMAGE/VERSION)
      #     docker push $REPO_URL/$REPO_PROJECT/$IMAGE:latest
      #     docker push $REPO_URL/$REPO_PROJECT/$IMAGE:$VERSION
