---
name: Publish Docker images
on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REPO_URL: ghcr.io
  REPO_PROJECT: killmenot

jobs:
  input:
    runs-on: ubuntu-22.04
    outputs:
      paths: ${{ steps.wrap.outputs.paths }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Glob match
        uses: tj-actions/glob@v22
        id: glob
        with:
          separator: ','
          files: |
            **/Dockerfile

      - name: Wrap
        id: wrap
        run: |
          tmp1="${{ steps.glob.outputs.paths }}"
          tmp2=`echo "[\"$tmp1\"]" |sed 's/,/\",\"/g'`
          echo "paths=${tmp2}" >> "$GITHUB_OUTPUT"

  push-to-registry:
    runs-on: ubuntu-latest
    needs: [input]
    strategy:
      matrix:
        path: ${{ fromJSON(needs.input.outputs.paths) }}
    steps:
      - uses: winterjung/split@v2
        id: split
        with:
          separator: '/'
          msg: "${{ matrix.path }}"

      - name: Inputs
        id: image
        run: |
          echo "name=${{ steps.split.outputs._0 }}" >> "$GITHUB_OUTPUT"
          echo "tag=${{ steps.split.outputs._1 }}" >> "$GITHUB_OUTPUT"

      - name: Test
        id: inputs
        run: |
          echo "${{ steps.image.name }}"
          echo "${{ steps.image.tag }}"
      
      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build
      #   env:
      #     IMAGE: ${{ matrix.image }}
      #   run: |
      #     # set -x
      #     docker build -t $REPO_URL/$REPO_PROJECT/$IMAGE $IMAGE/.
      
      # - name: Tag
      #   env:
      #     IMAGE: ${{ matrix.image }}
      #   run: |
      #     # set -x
      #     VERSION=$(cat $IMAGE/VERSION)
      #     echo $VERSION
      #     docker tag $REPO_URL/$REPO_PROJECT/$IMAGE:latest $REPO_URL/$REPO_PROJECT/$IMAGE:$VERSION
      
      # - name: Push images
      #   env:
      #     IMAGE: ${{ matrix.image }}
      #   run: |
      #     # set -x
      #     VERSION=$(cat $IMAGE/VERSION)
      #     docker push $REPO_URL/$REPO_PROJECT/$IMAGE:latest
      #     docker push $REPO_URL/$REPO_PROJECT/$IMAGE:$VERSION
